"use strict";(self.webpackChunk_mssfoobar_docs=self.webpackChunk_mssfoobar_docs||[]).push([[6329],{84293:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"modules/iams/development/operating-concept-and-administration/operating-concepts","title":"Operating Concepts","description":"Domain Model","source":"@site/docs/modules/iams/development/operating-concept-and-administration/operating-concepts.md","sourceDirName":"modules/iams/development/operating-concept-and-administration","slug":"/modules/iams/development/operating-concept-and-administration/operating-concepts","permalink":"/docs/docs/modules/iams/development/operating-concept-and-administration/operating-concepts","draft":false,"unlisted":false,"editUrl":"https://github.com/mssfoobar/docs/tree/main/docs/modules/iams/development/operating-concept-and-administration/operating-concepts.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1,"sidebar_label":"Operating Concepts"},"sidebar":"modulesSidebar","previous":{"title":"Multi-tenancy","permalink":"/docs/docs/modules/iams/development/multi-tenancy"},"next":{"title":"Administration","permalink":"/docs/docs/modules/iams/development/operating-concept-and-administration/administration"}}');var o=s(74848),t=s(28453);const r={sidebar_position:1,sidebar_label:"Operating Concepts"},a="Operating Concepts",l={},c=[{value:"Domain Model",id:"domain-model",level:2},{value:"Entity Descriptions",id:"entity-descriptions",level:2},{value:"Realm",id:"realm",level:3},{value:"Description",id:"description",level:4},{value:"Relationships",id:"relationships",level:4},{value:"Tenant",id:"tenant",level:3},{value:"Description",id:"description-1",level:4},{value:"Relationships",id:"relationships-1",level:4},{value:"User",id:"user",level:3},{value:"Description",id:"description-2",level:4},{value:"Relationships",id:"relationships-2",level:4},{value:"Role",id:"role",level:3},{value:"Description",id:"description-3",level:4},{value:"Relationships",id:"relationships-3",level:4},{value:"Group",id:"group",level:3},{value:"Description",id:"description-4",level:4},{value:"Relationships",id:"relationships-4",level:4},{value:"Resource",id:"resource",level:3},{value:"Description",id:"description-5",level:4},{value:"Relationship",id:"relationship",level:4},{value:"Scope",id:"scope",level:3},{value:"Description",id:"description-6",level:4},{value:"Relationships",id:"relationships-5",level:4}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",strong:"strong",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"operating-concepts",children:"Operating Concepts"})}),"\n",(0,o.jsx)(n.h2,{id:"domain-model",children:"Domain Model"}),"\n",(0,o.jsx)(n.p,{children:"The domain model of IAMS revolves around the following key entities:"}),"\n",(0,o.jsxs)(n.ol,{children:["\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Realm"})," \u2013 A top-level entity in IAMS. Realms can be used to organize tenants, users, roles, group, and resources."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Tenant"})," \u2013 A separate entity or organization within a realm. Each tenant has its own set of roles, groups, and resources."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"User"})," \u2013 An individual in a realm. Users can have membership in multiple tenants and assigned multiple roles within the tenant he/she is member of."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Role"})," \u2013 A role identifies a type or category of user. Admin, user, manager, and employee are all typical roles that may exist in a tenant. Applications often assign access and permissions to specific roles rather than individual users as dealing with users can be too fine-grained and hard to manage."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Group"})," \u2013 A collection of users within a tenant. Group can be used to assign roles or permissions to multiple users at once."]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Resource"})," \u2013 A resource represents an entity or object within the system that can be accessed or managed by users with the appropriate roles or permissions"]}),"\n",(0,o.jsxs)(n.li,{children:[(0,o.jsx)(n.strong,{children:"Scope"})," \u2013 A scope is a bounded extent of access that is possible to perform on a resource. It usually indicates what can be done with a given resource. An example of some common scopes are ",(0,o.jsx)(n.code,{children:"view"}),", ",(0,o.jsx)(n.code,{children:"edit"}),", ",(0,o.jsx)(n.code,{children:"delete"})," etc."]}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"entity-descriptions",children:"Entity Descriptions"}),"\n",(0,o.jsx)(n.h3,{id:"realm",children:"Realm"}),"\n",(0,o.jsx)(n.h4,{id:"description",children:"Description"}),"\n",(0,o.jsx)(n.p,{children:"A realm represents a top-level entity that owns multiple tenants. Realms can be used to organize tenants, users, roles, and resources."}),"\n",(0,o.jsx)(n.p,{children:"Realm need to be created in Keycloak. It can be created via Keycloak Admin Console."}),"\n",(0,o.jsx)(n.p,{children:"Realm name is unique within Keycloak."}),"\n",(0,o.jsx)(n.p,{children:"As part of the deployment steps in Quick Start, a default Realm named AOH will be created."}),"\n",(0,o.jsx)(n.h4,{id:"relationships",children:"Relationships"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Multiple Realms can be created for each application. But typically only one is created unless you are implementing Separate Realm for Each Tenant approach for multitenancy."}),"\n",(0,o.jsx)(n.li,{children:"Each realm can have one or more tenants."}),"\n",(0,o.jsx)(n.li,{children:"Each realm can have users and users are unique across realm."}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"tenant",children:"Tenant"}),"\n",(0,o.jsx)(n.h4,{id:"description-1",children:"Description"}),"\n",(0,o.jsx)(n.p,{children:"A tenant represents a separate entity or organization within a realm. Each tenant has its own set of roles, group, and resources."}),"\n",(0,o.jsx)(n.p,{children:"A tenant name is unique within a realm."}),"\n",(0,o.jsx)(n.h4,{id:"relationships-1",children:"Relationships"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"A tenant belongs to one realm."}),"\n",(0,o.jsx)(n.li,{children:"A tenant is associated with one or more roles, groups, and resources."}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"user",children:"User"}),"\n",(0,o.jsx)(n.h4,{id:"description-2",children:"Description"}),"\n",(0,o.jsx)(n.p,{children:"A user is an individual who belongs to a realm. User can be a member of one or more tenants within the realm."}),"\n",(0,o.jsx)(n.p,{children:"Username is unique within a realm."}),"\n",(0,o.jsx)(n.p,{children:"Users can have multiple roles within a tenant and can belong to multiple groups within a tenant."}),"\n",(0,o.jsx)(n.p,{children:"User can be granted with scoped access to one or more resources from the tenant that he is member of (i.e., User-based Access Control)."}),"\n",(0,o.jsx)(n.h4,{id:"relationships-2",children:"Relationships"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"A user belongs to one realm."}),"\n",(0,o.jsx)(n.li,{children:"A user can be member of one or more tenants from the realm he belongs to."}),"\n",(0,o.jsx)(n.li,{children:"A user can be associated with one or more roles from the tenant that he is member of."}),"\n",(0,o.jsx)(n.li,{children:"A user can be associated with one or more groups from the tenant that he is member of."}),"\n",(0,o.jsx)(n.li,{children:"A user can be granted with scoped access to one or more resources from the tenant that he is member of."}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"role",children:"Role"}),"\n",(0,o.jsx)(n.h4,{id:"description-3",children:"Description"}),"\n",(0,o.jsx)(n.p,{children:"A role identifies a type or category of user. Admin, user, manager, and employee are all typical roles that may exist in a tenant. Applications often assign access and permissions to specific roles rather than individual users as dealing with users can be too fine-grained and hard to manage."}),"\n",(0,o.jsx)(n.p,{children:"Role name is unique within a tenant. Different Roles can exist in different tenants that have the same name."}),"\n",(0,o.jsx)(n.p,{children:"A tenant can have one or more roles and roles can be granted with scoped access to one or more resources from the tenant it belongs to (i.e., Role-based Access Control)."}),"\n",(0,o.jsx)(n.p,{children:"Roles can be assigned to users or groups."}),"\n",(0,o.jsx)(n.h4,{id:"relationships-3",children:"Relationships"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"A role belongs to one tenant."}),"\n",(0,o.jsx)(n.li,{children:"A role can be assigned to one or more users or groups within a tenant."}),"\n",(0,o.jsx)(n.li,{children:"A role is can be granted with scoped access to one or more resources from the tenant that it belongs to."}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"group",children:"Group"}),"\n",(0,o.jsx)(n.h4,{id:"description-4",children:"Description"}),"\n",(0,o.jsx)(n.p,{children:"A is a collection of users within a tenant. Groups can be used to assign roles or permissions to multiple users at once."}),"\n",(0,o.jsx)(n.p,{children:"A group can have sub-groups. Name of the group must be unique within siblings."}),"\n",(0,o.jsx)(n.p,{children:"A group can be assigned to one or more roles."}),"\n",(0,o.jsx)(n.p,{children:"A group can be granted with scoped access to one or more resources from the tenant it belongs to (i.e., Group-based Access Control)."}),"\n",(0,o.jsx)(n.h4,{id:"relationships-4",children:"Relationships"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"A group belongs to one tenant."}),"\n",(0,o.jsx)(n.li,{children:"A group can have subgroups."}),"\n",(0,o.jsx)(n.li,{children:"A group can be assigned with one or more users within a tenant."}),"\n",(0,o.jsx)(n.li,{children:"A group can be granted with scoped access to one or more resources from the tenant it belongs to."}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"resource",children:"Resource"}),"\n",(0,o.jsx)(n.h4,{id:"description-5",children:"Description"}),"\n",(0,o.jsx)(n.p,{children:"A resource represents an entity or object within the tenant that can be accessed or managed by users with the appropriate roles or permissions."}),"\n",(0,o.jsx)(n.p,{children:"A resource name must be unique within the tenant."}),"\n",(0,o.jsx)(n.p,{children:"A resource has one or more scopes that are used to represent scoped access to a resource that can be granted to user, roles, or group within the tenant."}),"\n",(0,o.jsx)(n.h4,{id:"relationship",children:"Relationship"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"A resource belongs to one tenant."}),"\n",(0,o.jsx)(n.li,{children:"A resource is associated with one or more scopes."}),"\n"]}),"\n",(0,o.jsx)(n.h3,{id:"scope",children:"Scope"}),"\n",(0,o.jsx)(n.h4,{id:"description-6",children:"Description"}),"\n",(0,o.jsx)(n.p,{children:"A scope is a bounded extent of access that is possible to perform on a resource. It usually indicates what can be done with a given resource. Example of scopes are view, edit, delete, and so on."}),"\n",(0,o.jsx)(n.p,{children:"However, scope can also be related to specific information provided by a resource. In this case, you can have an Incident resource and a eSOP scope, where the eSOP scope is used to define specific permissions for users to access the eSOP information of an Incident."}),"\n",(0,o.jsx)(n.p,{children:"A scope belongs to a tenant and its name must be unique within the tenant."}),"\n",(0,o.jsx)(n.p,{children:"A scope can be associated with one or more resources in the same tenant."}),"\n",(0,o.jsx)(n.h4,{id:"relationships-5",children:"Relationships"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"A scope belongs to one tenant."}),"\n",(0,o.jsx)(n.li,{children:"A scope is associated with one or more resources."}),"\n",(0,o.jsx)(n.li,{children:"A scope and resource pair formed a permission that can be assigned to users, groups, or roles."}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>a});var i=s(96540);const o={},t=i.createContext(o);function r(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);