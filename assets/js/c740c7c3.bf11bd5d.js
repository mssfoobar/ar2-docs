"use strict";(self.webpackChunk_mssfoobar_docs=self.webpackChunk_mssfoobar_docs||[]).push([[2905],{45755:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"modules/iams/development/authorization","title":"Overview","description":"With IAMS, project can choose to implement:","source":"@site/docs/modules/iams/development/authorization.mdx","sourceDirName":"modules/iams/development","slug":"/modules/iams/development/authorization","permalink":"/docs/docs/modules/iams/development/authorization","draft":false,"unlisted":false,"editUrl":"https://github.com/mssfoobar/docs/tree/main/docs/modules/iams/development/authorization.mdx","tags":[],"version":"current","sidebarPosition":7,"frontMatter":{"sidebar_position":7,"sidebar_label":"Authorization"},"sidebar":"modulesSidebar","previous":{"title":"Customize Login Screen","permalink":"/docs/docs/modules/iams/development/authentication/customize-login-screen"},"next":{"title":"Configuration","permalink":"/docs/docs/modules/iams/configuration/"}}');var t=s(74848),o=s(28453);const r={sidebar_position:7,sidebar_label:"Authorization"},c="Overview",a={},d=[{value:"Basic Authorization",id:"basic-authorization",level:2},{value:"Retrieve Roles from Access Token",id:"retrieve-roles-from-access-token",level:3},{value:"Fine-grained Access Control",id:"fine-grained-access-control",level:2}];function l(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"overview",children:"Overview"})}),"\n",(0,t.jsx)(n.p,{children:"With IAMS, project can choose to implement:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Basic Authorization"}),"\n",(0,t.jsx)(n.li,{children:"Fine-grained access control"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"IAMS provides necessary support to manage the permission and facilitate application in determining whether a user has\naccess to application functionality. However, the enforcing of the decision will have to be implemented by the\napplication."}),"\n",(0,t.jsx)(n.p,{children:"For example, IAMS provides support to create Manager role and assign it to the user. IAMS also provide means to check\nwhether user has the Manager role but enforcement of whether user with Manager role can perform specific action in the\napplication, said approve submitted timesheet, will have to be implement by the application."}),"\n",(0,t.jsx)(n.h2,{id:"basic-authorization",children:"Basic Authorization"}),"\n",(0,t.jsx)(n.p,{children:"In Basic Authorization, roles are used to grant access to the Application."}),"\n",(0,t.jsx)(n.p,{children:"Roles are created and assigned to Users. Application permit user access to specific functionality based on the roles\nthat are assigned to User. For example, Timesheet Application can have 2 roles; Manager and Employee. Employee will be\nable to fill and submit timesheet while the Manager will be able to approve the timesheet submitted."}),"\n",(0,t.jsxs)(n.p,{children:["The checking of role will be based on the roles listed in the ",(0,t.jsx)(n.code,{children:"active_tenant"})," claim in Access Token."]}),"\n",(0,t.jsx)(n.p,{children:"Typical flow for basic authorization is as follows:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"basic authorization",src:s(54748).A+"",width:"658",height:"361"})}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"User make a request to Web App Backend."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Web App Backend check whether user has ",(0,t.jsx)(n.code,{children:"Access Token"})," in cookies. If ",(0,t.jsx)(n.code,{children:"Access Token"})," is not present, user will be\ndenied access and redirect to Keycloak for authentication."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.code,{children:"Access Token"})," is present, Web App Backend will then need to validate the ",(0,t.jsx)(n.code,{children:"Access Token"})," to ensure it is valid.\nTo check for validity of the ",(0,t.jsx)(n.code,{children:"Access Token"}),", Web App Backend can use the Online or Offline Validation. See\n",(0,t.jsx)(n.a,{href:"/docs/docs/modules/iams/development/authentication/id-token-access-token-refresh-tokens#online-validation",children:"Online Validation"})," and\n",(0,t.jsx)(n.a,{href:"/docs/docs/modules/iams/development/authentication/id-token-access-token-refresh-tokens#offline-validation",children:"Offline Validation"})," for more\ninformation on ",(0,t.jsx)(n.code,{children:"Access Token"})," Validation."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Once determine that the ",(0,t.jsx)(n.code,{children:"access token"})," is valid, Web App Backend will then retrieve the roles that are assigned\nto user from the ",(0,t.jsx)(n.code,{children:"Access Token"}),". Based on the roles, Web App Backend will determine whether user has the rights to\nperform the request. If user doesn\u2019t have the required role, he will be directed to error page."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"If has the correct role, Web App Backend can then direct the request to the Backend Services."}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"retrieve-roles-from-access-token",children:"Retrieve Roles from Access Token"}),"\n",(0,t.jsx)(n.p,{children:"To access the roles granted to user from the Access Token, you will need to perform the followings:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Split Access Token into Sections; Header, Payload, and Signature"}),"\n",(0,t.jsx)(n.li,{children:"Decode the payload of Access Token to JSON string"}),"\n",(0,t.jsx)(n.li,{children:"Retrieve the roles from the active_tenant claim in the JSON string."}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:["Please refer to ",(0,t.jsx)(n.a,{href:"/docs/docs/modules/iams/development/authentication/id-token-access-token-refresh-tokens#split-access-token-into-sections",children:"Split Access Token into Section"}),"\nand ",(0,t.jsx)(n.a,{href:"/docs/docs/modules/iams/development/authentication/id-token-access-token-refresh-tokens#check-issue-date-and-expiry-date",children:"Check Issue Date and Expiry Date"}),"\non how to split Access Token and decode the payload into JSON string."]}),"\n",(0,t.jsx)(n.p,{children:"After decoded the access token, you should get a JSON string with structure similar to the followings:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-json",children:'{\n  "exp" : 1721289932,\n  "iat" : 1721289632,\n  "auth_time" : 1721289347,\n  "jti" : "a0b2a1fc-cdd8-43a4-9e95-627defac350b",\n  "iss" : "http://192.168.6.44:8080/realms/AOH",\n  "aud" : [ "realm-management", "account" ],\n  "sub" : "b25aa224-21b2-40d7-a735-3d5f10f99146",\n  "typ" : "Bearer",\n  "azp" : "web-app",\n  "sid" : "9774505b-835e-4729-b1d1-f11920c9284a",\n  "acr" : "0",\n  "allowed-origins" : [ "http://localhost:3000" ],\n\u2026\n\u2026\n\n"preferred_username" : "tbs",\n  "given_name" : "T",\n  "active_tenant" : {\n    "tenant_id" : "8ce3c8f2-98fa-4d06-b51c-1724c86e53aa",\n    "tenant_name" : "test 2",\n    "roles" : [ "tenant-admin", "Manager", "Content Creator" ]\n  },\n  "family_name" : "BS",\n  "email" : "tbs@test.com"\n}\n'})}),"\n",(0,t.jsxs)(n.p,{children:["To have the ",(0,t.jsx)(n.code,{children:"active_tenant"})," claim available in the ",(0,t.jsx)(n.code,{children:"Access Token"}),", ",(0,t.jsx)(n.code,{children:"Select Active Tenant"})," required action and\n",(0,t.jsx)(n.code,{children:"Active Tenant"})," Mapper need to be configured in the Realm."]}),"\n",(0,t.jsxs)(n.p,{children:["Please refer to ",(0,t.jsx)(n.a,{href:"/docs/docs/modules/iams/configuration/manual-keycloak-realm-setup/required-actions#enable-select-active-tenant-required-action",children:"Enable Active Tenant Required Action"}),"\nand ",(0,t.jsx)(n.a,{href:"/docs/docs/modules/iams/configuration/manual-keycloak-realm-setup/token-claims#configure-the-mapper",children:"Configure Active Tenant Mapper"}),"\non how to configure the ",(0,t.jsx)(n.code,{children:"Select Active Tenant"})," required action and ",(0,t.jsx)(n.code,{children:"Active Tenant"})," Mapper."]}),"\n",(0,t.jsx)(n.h2,{id:"fine-grained-access-control",children:"Fine-grained Access Control"}),"\n",(0,t.jsx)(n.p,{children:"In fine-grained access control, resource and scope are used to grant access to the application."}),"\n",(0,t.jsx)(n.p,{children:"Resource are created to represents protected entity or object within the Application, and scope are the action allowed\nto be performed on the protected resource."}),"\n",(0,t.jsx)(n.p,{children:"Permission to perform specific scoped action on a protected resource is then granted to user, via role assigned to\nuser, via group associated with user, or direct granting the permission to user."}),"\n",(0,t.jsx)(n.p,{children:"IAMS provides the necessary APIs to evaluate whether user has been granted specified permission (specific scoped action\non specific resources) and also all the scoped actions that user is permitted on specific resource. The latter is\nuseful in UI rendering to determine whether certain buttons need to be show or hide based on the scoped actions\npermitted to the user."}),"\n",(0,t.jsx)(n.p,{children:"For fine-grained access control, IAMS supports:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"User-based Access Control (UBAC)"})," \u2013 user is directly granted specific permission (specific scoped action on\nspecific resources)."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Role-based Access Control (RBAC)"})," \u2013 the permission is granted to the role(s) such that users assigned with those\nroles will be allowed to perform the scoped action on the resource.\nBy default, roles granted with the permission are not specified as required meaning access will be granted if the\nuser requesting access has been granted any of the roles.\nHowever, you can specify a specific role as required when granting permission to roles, such that user must have\nthe required role in order to be granted access."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"Group-based Access Control (GBAC)"})," \u2013 the permission is granted to the group(s) such that users belonging to any\nof the group will be permitted to perform the scoped action on the resource.\nBy default, access restriction is only applied to the groups granted with permission. However, it is possible to\nenable ",(0,t.jsx)(n.code,{children:"Extend to Children"})," during the granting of the permission such that the users belonging to the subgroup of\nthe granted group will also inherit the permission."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"Typical flow for fine-grained authorization is as follows:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{alt:"Fine-grained Access Control",src:s(16554).A+"",width:"658",height:"357"})}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"User make a request to Web App Backend."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Web App Backend check whether user has ",(0,t.jsx)(n.code,{children:"Access Token"})," in cookies. If ",(0,t.jsx)(n.code,{children:"Access Token"})," is not present, user will be\ndenied access and redirect to Keycloak for authentication."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["If ",(0,t.jsx)(n.code,{children:"Access Token"})," is present, Web App Backend will then need to validate the ",(0,t.jsx)(n.code,{children:"Access Token"})," to ensure it is valid.\nTo check for validity of the ",(0,t.jsx)(n.code,{children:"Access Token"}),", Web App Backend can use the\n",(0,t.jsx)(n.a,{href:"/docs/docs/modules/iams/development/authentication/id-token-access-token-refresh-tokens#online-validation",children:"Online"})," or\n",(0,t.jsx)(n.a,{href:"/docs/docs/modules/iams/development/authentication/id-token-access-token-refresh-tokens#offline-validation",children:"Offline"})," Validation."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Once determine that the ",(0,t.jsx)(n.code,{children:"access token"})," is valid, Web App Backend will then make a request to IAMS to evaluate\nwhether user is granted permission to perform specific scoped action on specific resource. If the evaluation request\nresult is ",(0,t.jsx)(n.code,{children:"Unauthorized"}),", application will redirect user to error page."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.admonition,{type:"note",children:(0,t.jsx)(n.p,{children:"As part of the permission evaluation processing, IAMS will also perform Access Token validation. Hence, it is possible\nto skip step 3 since it is also performed by IAMS."})}),"\n",(0,t.jsxs)(n.ol,{start:"5",children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"If user has the correct permission, Web App Backend can then direct the request to the Backend Services."}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Backend Services when received the request can also invoke IAMS again to evaluate whether user has the right\npermission."}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},54748:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/basic-authorization-4a8e60a2f786dec9acb2303e16b658bc.png"},16554:(e,n,s)=>{s.d(n,{A:()=>i});const i=s.p+"assets/images/fine-grained-access-control-fcf5e62eabdb963508d6729e4f2595e5.png"},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>c});var i=s(96540);const t={},o=i.createContext(t);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);