"use strict";(self.webpackChunk_mssfoobar_docs=self.webpackChunk_mssfoobar_docs||[]).push([[5628],{18436:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>d,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"contributing/development/conventions","title":"Development Conventions","description":"This section provides general guidelines for development as well as their justification. It also deals with one of the","source":"@site/docs/contributing/development/conventions.md","sourceDirName":"contributing/development","slug":"/contributing/development/conventions","permalink":"/docs/docs/contributing/development/conventions","draft":false,"unlisted":false,"editUrl":"https://github.com/mssfoobar/docs/tree/main/docs/contributing/development/conventions.md","tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"contributingSidebar","previous":{"title":"Source Control","permalink":"/docs/docs/contributing/development/source-control"},"next":{"title":"Logging","permalink":"/docs/docs/contributing/development/logging"}}');var r=s(74848),t=s(28453);const d={sidebar_position:2},a="Development Conventions",l={},c=[{value:"Naming Git Repositories",id:"naming-git-repositories",level:2},{value:"Database",id:"database",level:2},{value:"Naming schemas",id:"naming-schemas",level:3},{value:"Naming tables",id:"naming-tables",level:3},{value:"Naming views",id:"naming-views",level:3},{value:"Naming association tables",id:"naming-association-tables",level:3},{value:"Naming the database user",id:"naming-the-database-user",level:3},{value:"Mandatory database columns",id:"mandatory-database-columns",level:3},{value:"Golang Mandatory tables",id:"golang-mandatory-tables",level:3},{value:"Module Info Table:",id:"module-info-table",level:4},{value:"Table Schema:",id:"table-schema",level:4},{value:"Recommended Initial Data:",id:"recommended-initial-data",level:4},{value:"API, Routes, and Endpoints",id:"api-routes-and-endpoints",level:2},{value:"Kubernetes Liveness and Readiness probes",id:"kubernetes-liveness-and-readiness-probes",level:3},{value:"Web Pages",id:"web-pages",level:3},{value:"Data Response Format",id:"data-response-format",level:3},{value:"Pagination",id:"pagination",level:3},{value:"Request Pagination Params",id:"request-pagination-params",level:4},{value:"Response Pagination Data",id:"response-pagination-data",level:4},{value:"Log levels",id:"log-levels",level:2},{value:"Container Image Tagging",id:"container-image-tagging",level:2}];function o(e){const n={a:"a",admonition:"admonition",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",hr:"hr",li:"li",ol:"ol",p:"p",pre:"pre",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"development-conventions",children:"Development Conventions"})}),"\n",(0,r.jsx)(n.p,{children:"This section provides general guidelines for development as well as their justification. It also deals with one of the\ntwo hardest problems in computer science. Namely, naming."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"naming-git-repositories",children:"Naming Git Repositories"}),"\n",(0,r.jsx)(n.p,{children:"For all source code stored in Git repositories, services will typically namespace them under organizations, or projects\n(e.g. GitHub and GitLab respectively). This means we do not need to add additional prefixes for our repositories."}),"\n",(0,r.jsx)(n.p,{children:"To keep things easy to remember and associate with naming in code, we shall name all repositories based on the\nabbreviation of the module they're for, and the repository description must continue the full module name at\nthe beginning."}),"\n",(0,r.jsxs)(n.p,{children:["For example, for ",(0,r.jsx)(n.code,{children:"Unified Notification Hub"})," the repository name shall be:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"unh\n"})}),"\n",(0,r.jsx)(n.p,{children:"and a sample description would be:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"Unified Notification Hub - supports email, sms, push notifications, and customized notification channels.\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"database",children:"Database"}),"\n",(0,r.jsx)(n.h3,{id:"naming-schemas",children:"Naming schemas"}),"\n",(0,r.jsxs)(n.p,{children:["Services within our system might have to share database with other external services. The deployment configuration\nis highly dependent on the project the system is ultimately deployed to. Because of this, all schemas shall be\nprefixed with ",(0,r.jsx)(n.code,{children:"aoh_"})," to avoid clashes in naming:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"aoh_[repository name]\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Example for a service named ",(0,r.jsx)(n.code,{children:"Unified Notification Hub"})," with the repository abbreviation ",(0,r.jsx)(n.code,{children:"unh"}),", the schema name shall be:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"aoh_unh\n"})}),"\n",(0,r.jsxs)(n.p,{children:["See Also: ",(0,r.jsx)(n.a,{href:"#naming-git-repositories",children:"Git Repository Naming"})]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"naming-tables",children:"Naming tables"}),"\n",(0,r.jsxs)(n.p,{children:["Tables should be named after the entity they represent, in singular form (so a table representing notifications should\nbe called ",(0,r.jsx)(n.code,{children:"notification"}),")"]}),"\n",(0,r.jsx)(n.admonition,{type:"warning",children:(0,r.jsx)(n.p,{children:'That\'s notification WITHOUT the "S"!'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"naming-views",children:"Naming views"}),"\n",(0,r.jsxs)(n.p,{children:["Views shall be prefixed with ",(0,r.jsx)(n.code,{children:"v_"}),", this allows us to clearly see which tables are views. Database management UI's\nwould also typically sort tables by name, allowing all views to be grouped together neatly."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"v_[view name]\n"})}),"\n",(0,r.jsx)(n.p,{children:"Example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"v_notification_template\n"})}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsxs)(n.p,{children:["To be discussed: ",(0,r.jsx)(n.em,{children:"naming materialized views"})]})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"naming-association-tables",children:"Naming association tables"}),"\n",(0,r.jsxs)(n.p,{children:["Association tables are commonly used to map the relationship between entities, especially for many-to-many\nrelationships. We'll use the simple, common covention of concatenating the two tables names and suffixing ",(0,r.jsx)(n.code,{children:"_mapping"}),"\nbehind."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"[table 1]_[table 2]_mapping\n"})}),"\n",(0,r.jsx)(n.p,{children:"Example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"user_notification_mapping\n"})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"naming-the-database-user",children:"Naming the database user"}),"\n",(0,r.jsx)(n.p,{children:"Direct database access for each service is via a unique database account. We do this instead of having a shared\naccount for the purpose having the ability to apply access control between services. We'll also have to namespace\nthis user account as we might share the database with other external services (as is often the case with\nprojects being deployed into existing infrastructure)"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"aoh_[repo name]_user\n"})}),"\n",(0,r.jsx)(n.p,{children:"Example:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",children:"aoh_unh_user\n"})}),"\n",(0,r.jsx)(n.p,{children:"See Also:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#naming-git-repositories",children:"Git Repository Naming"})}),"\n",(0,r.jsx)(n.li,{children:(0,r.jsx)(n.a,{href:"#naming-schemas",children:"Naming Schemas"})}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"mandatory-database-columns",children:"Mandatory database columns"}),"\n",(0,r.jsxs)(n.p,{children:["The following fields (database columns) are mandatory and must be ",(0,r.jsx)(n.em,{children:"NOT NULLABLE"}),"."]}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Default"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"id"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uuid"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"gen_random_uuid()"})}),(0,r.jsxs)(n.td,{children:["We use a ",(0,r.jsx)(n.code,{children:"uuid"})," as a primary key for all tables as a best practice. Having universally unique synthetic primary keys (as opposed to sequential ints) allows us to avoid a large class of common errors that might arise from unintended references. It is also better from a security perspective. If your module requires human-readable ID's, create another column for it and assign a unique constraint across that column + ",(0,r.jsx)(n.code,{children:"tenant_id"}),"."]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"created_at"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"timestamp with timezone"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"now()"})}),(0,r.jsx)(n.td,{children:"The UTC timestamp when this record was first created"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"updated_at"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"timestamp with timezone"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"now()"})}),(0,r.jsx)(n.td,{children:"The UTC timestamp when this record was last updated, use database triggers"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"created_by"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"text"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"The reference to the user who created this record - do not apply database constraints"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"updated_by"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"text"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"The reference to the user who last modified this record - do not apply database constraints"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"tenant_id"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"text"})}),(0,r.jsx)(n.td,{}),(0,r.jsx)(n.td,{children:"The reference to the tenant this row belongs to - do not apply database constraints"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"occ_lock"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"int"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"0"})}),(0,r.jsx)(n.td,{children:"This integer must match on all update queries to ensure the user is not trying to update a row with outdated data (because another user might have already updated it, changing the number). The purpose is for optimistic currency control but you can think of this as a version number."})]})]})]}),"\n",(0,r.jsx)(n.admonition,{type:"note",children:(0,r.jsx)(n.p,{children:"We only apply database constraints (e.g. foreign key constraints) when the reference is within the same service\n(schema). This is to avoid coupling the services at the database level."})}),"\n",(0,r.jsx)(n.admonition,{title:"PostgreSQL-specific types and functions",type:"warning",children:(0,r.jsxs)(n.p,{children:["Some of the types and functions (like ",(0,r.jsx)(n.code,{children:"gen_random_uuid"}),") might be a PostgreSQL-specific function. This will have to\nvary based on your actual database product - use the appropriate alternatives instead."]})}),"\n",(0,r.jsx)(n.admonition,{title:"To Be Decided:",type:"note",children:(0,r.jsxs)(n.p,{children:["Discussion required to determine if the ",(0,r.jsx)(n.code,{children:"soft delete"})," capability is required, and if the implementation should be via\nextra fields or using archive tables."]})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"golang-mandatory-tables",children:"Golang Mandatory tables"}),"\n",(0,r.jsxs)(n.p,{children:["Modules should be separated by their schema, and within their own schemas, they should have a dedicated ",(0,r.jsx)(n.code,{children:"module_info"}),"\ntable. This table exists for services to be able to query the current state of the schema, as well as any other\ninformation that might be useful for services. ",(0,r.jsx)(n.code,{children:"tenant_id"}),", ",(0,r.jsx)(n.code,{children:"created_by"})," and ",(0,r.jsx)(n.code,{children:"updated_by"})," is not required for this\ntable."]}),"\n",(0,r.jsx)(n.h4,{id:"module-info-table",children:"Module Info Table:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-bash",metastring:'title="Table Name"',children:"module_info\n"})}),"\n",(0,r.jsx)(n.p,{children:"This table is designed to arbitrary store key values pairs."}),"\n",(0,r.jsx)(n.h4,{id:"table-schema",children:"Table Schema:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Default"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"id"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"uuid"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"gen_random_uuid()"})}),(0,r.jsxs)(n.td,{children:["Mandatory field, see ",(0,r.jsx)(n.a,{href:"#mandatory-database-columns",children:"mandatory database colunmns"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"created_at"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"timestamp"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"now()"})}),(0,r.jsxs)(n.td,{children:["Mandatory field, see ",(0,r.jsx)(n.a,{href:"#mandatory-database-columns",children:"mandatory database colunmns"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"updated_at"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"timestamp"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"now()"})}),(0,r.jsxs)(n.td,{children:["Mandatory field, see ",(0,r.jsx)(n.a,{href:"#mandatory-database-columns",children:"mandatory database colunmns"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"occ_lock"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"int"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"0"})}),(0,r.jsxs)(n.td,{children:["Mandatory field, see ",(0,r.jsx)(n.a,{href:"#mandatory-database-columns",children:"mandatory database colunmns"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"key"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"text"})}),(0,r.jsx)(n.td,{}),(0,r.jsxs)(n.td,{children:["The key of the pair - ",(0,r.jsx)(n.code,{children:"NOT NULL"}),", ",(0,r.jsx)(n.code,{children:"UNIQUE"})]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"value"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"text"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"NULL"})}),(0,r.jsx)(n.td,{children:"The value of the pair"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"comment"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"text"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"NULL"})}),(0,r.jsx)(n.td,{children:"A descriptive comment about the key-value pair"})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"recommended-initial-data",children:"Recommended Initial Data:"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Key"}),(0,r.jsx)(n.th,{children:"Value"}),(0,r.jsx)(n.th,{children:"Comment"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"INITIAL_SCHEMA_VERSION"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"0.0.1"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"initial schema version"})}),(0,r.jsx)(n.td,{children:"Initial schema version for the service to check against"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"CURRENT_SCHEMA_VERSION"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"0.0.1"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"current schema version"})}),(0,r.jsx)(n.td,{children:"Current schema version for the service to check against"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"INITIAL_APPLICATION_VERSION"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"0.0.1"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"initial app version"})}),(0,r.jsx)(n.td,{children:"Current application version populated by the service if the row doesn't exist"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"CURRENT_APPLICATION_VERSION"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"0.0.1"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"current schema version"})}),(0,r.jsx)(n.td,{children:"Current application version, upserted by the service"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"DEPLOYMENT_TIME"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"2024-08-12T18:32:42"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"the time this service was started"})}),(0,r.jsx)(n.td,{children:"The time when the service was run"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:["Note that the values above will not be accurate when multiple replicas of a service is being run. In such a scenario,\nKubernetes will have to be the source of truth. Otherwise, these fields are useful for the developers during\ndevelopment time - the particularly important keys are the ",(0,r.jsx)(n.code,{children:"SCHEMA_VERSION"}),", which must be checked against before the\napplication proceeds."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"api-routes-and-endpoints",children:"API, Routes, and Endpoints"}),"\n",(0,r.jsx)(n.h3,{id:"kubernetes-liveness-and-readiness-probes",children:"Kubernetes Liveness and Readiness probes"}),"\n",(0,r.jsxs)(n.p,{children:["All services must provide a ",(0,r.jsx)(n.code,{children:"liveness"})," and ",(0,r.jsx)(n.code,{children:"readiness"})," endpoint for Kubernetes to call. As a rule, we'll use\n",(0,r.jsx)(n.code,{children:"livez"})," and ",(0,r.jsx)(n.code,{children:"readyz"})," at the root path, which is common with Google's internal practices. However, certain frameworks\nmight already provide such endpoints for the same purpose, requiring you to utilize their naming scheme; in such a\nscenario, you should stick with the framework's built-in endpoints (e.g. SpringBoot's ",(0,r.jsx)(n.code,{children:"/actuator/health/liveness"})," &\n",(0,r.jsx)(n.code,{children:"/actuator/health/readiness"}),")."]}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["Liveness Endpoint: ",(0,r.jsx)(n.code,{children:"/livez"})]}),"\n",(0,r.jsxs)(n.li,{children:["Readiness Endpoint: ",(0,r.jsx)(n.code,{children:"/readyz"})]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"web-pages",children:"Web Pages"}),"\n",(0,r.jsx)(n.p,{children:"The routing of web pages shall also be namespaced - first by the project, then by the module:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"/[project]/[module]/...\n"})}),"\n",(0,r.jsx)(n.p,{children:"Examples:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["View all incidents page: ",(0,r.jsx)(n.code,{children:"/aoh/incidents/"})]}),"\n",(0,r.jsxs)(n.li,{children:["View specific incident: ",(0,r.jsx)(n.code,{children:"/aoh/incidents/inc-20240607-0001"})]}),"\n",(0,r.jsxs)(n.li,{children:["Dashboard page: ",(0,r.jsx)(n.code,{children:"/aoh/dashboard?name=My+First+Dashboard"})]}),"\n"]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"data-response-format",children:"Data Response Format"}),"\n",(0,r.jsx)(n.p,{children:"The following is a recommended response format for all your API responses. These are general guidelines and might\nnot apply to all cases. For example, this should be the structur of your HTTP response body, or messages sent through Kafka etc."}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Key"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Optional"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"data"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"object"})," or ",(0,r.jsx)(n.code,{children:"array"})]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"yes"})}),(0,r.jsx)(n.td,{children:"The actual response data for the request."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"message"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"yes"})}),(0,r.jsx)(n.td,{children:"An accompanying message for additional information or debugging."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"sent_at"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"string"})," formatted as ",(0,r.jsx)(n.code,{children:"ISO8601"})]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"yes"})}),(0,r.jsx)(n.td,{children:"The time this message was sent."})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"errors"})}),(0,r.jsxs)(n.td,{children:[(0,r.jsx)(n.code,{children:"array"})," of ",(0,r.jsx)(n.code,{children:"{ message: string }"})]}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"yes"})}),(0,r.jsx)(n.td,{children:"An aggregation of errors if error feedback is necessary."})]})]})]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",metastring:'title="Example response body"',children:'{\n    data: {...}, // arbitrary format - recommend array for lists, object for individual records\n    message: "...", // string\n    sent_at: "", //iso8601\n    errors: [ {\n        message: "....", // string\n        ...\n    } ]\n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h3,{id:"pagination",children:"Pagination"}),"\n",(0,r.jsx)(n.p,{children:"Querying for entities almost always requires pagination to pull data effectively (applications should almost never pull\nan entire table of data)."}),"\n",(0,r.jsx)(n.p,{children:"Since pagination is a very common requirement, and different frameworks in different languages might support different\nout-of-the-box implementations of pagination, we have to allow for some API to be flexible. However, the guidelines\nto follow for paginated endpoints should be:"}),"\n",(0,r.jsxs)(n.ol,{children:["\n",(0,r.jsx)(n.li,{children:"Pagination arguments should be URL query params"}),"\n",(0,r.jsxs)(n.li,{children:["Requests: ",(0,r.jsx)(n.code,{children:"page"}),", ",(0,r.jsx)(n.code,{children:"size"})," and ",(0,r.jsx)(n.code,{children:"sort"})," should be supported","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"page"})," specifies what page the caller is currently at (the offset cursor) - only positive integers starting from 1"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"size"})," specifies how many rows are in each page - only positive integers starting from 1"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"sort"})," is a list of tuples containing ",(0,r.jsx)(n.code,{children:"field"})," and ",(0,r.jsx)(n.code,{children:"direction"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["The ",(0,r.jsx)(n.code,{children:"field"})," refers to the column to sort by"]}),"\n",(0,r.jsxs)(n.li,{children:["The ",(0,r.jsx)(n.code,{children:"direction"})," refers to whether the sort is ascending or descending","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"ASC"})," for ascending"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"DESC"})," for descending (default)"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsxs)(n.li,{children:["Response: ",(0,r.jsx)(n.code,{children:"data"}),", ",(0,r.jsx)(n.code,{children:"page: { number }"}),", ",(0,r.jsx)(n.code,{children:"page: { size }"}),", and ",(0,r.jsx)(n.code,{children:"page: { total_records }"})," information should be returned","\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"data"})," is the result of the query"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"number"})," is the current page of response"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"size"})," is the number of records per page"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"total_records"})," is the total number of records in the table"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"count"})," is an optional field, specifying the number of elements in the current page"]}),"\n",(0,r.jsxs)(n.li,{children:[(0,r.jsx)(n.code,{children:"sort"})," is an optional field, specifying the sort parameters used for to retrieve current page"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,r.jsx)(n.h4,{id:"request-pagination-params",children:"Request Pagination Params"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Default"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"page"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"int"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"1"})}),(0,r.jsx)(n.td,{children:"The number of elements in each page. Invalid values will be ignored and default will be used"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"size"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"int"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"10"})}),(0,r.jsx)(n.td,{children:"The current page - pages start at 1. Invalid values will be ignored and default will be used"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"sort"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string,string"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"created_at,DESC"})}),(0,r.jsx)(n.td,{children:"A list of sort columns and direction. Invalid values will be ignored and default will be used"})]})]})]}),"\n",(0,r.jsx)(n.h4,{id:"response-pagination-data",children:"Response Pagination Data"}),"\n",(0,r.jsxs)(n.table,{children:[(0,r.jsx)(n.thead,{children:(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.th,{children:"Name"}),(0,r.jsx)(n.th,{children:"Type"}),(0,r.jsx)(n.th,{children:"Optional"}),(0,r.jsx)(n.th,{children:"Description"})]})}),(0,r.jsxs)(n.tbody,{children:[(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"page: { number }"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"int"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"no"})}),(0,r.jsx)(n.td,{children:"The current page - pages start at 1"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"page: { size }"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"int"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"no"})}),(0,r.jsxs)(n.td,{children:["The number of elements in ",(0,r.jsx)(n.code,{children:"each"})," page"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"page: { total_records }"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"int"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"no"})}),(0,r.jsx)(n.td,{children:"The number of records in each page"})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"page: { count }"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"int"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"yes"})}),(0,r.jsxs)(n.td,{children:["The number of elements in the ",(0,r.jsx)(n.code,{children:"current"})," page"]})]}),(0,r.jsxs)(n.tr,{children:[(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"page: { sort }"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"string,string"})}),(0,r.jsx)(n.td,{children:(0,r.jsx)(n.code,{children:"yes"})}),(0,r.jsx)(n.td,{children:"The sort column and direction"})]})]})]}),"\n",(0,r.jsxs)(n.p,{children:["These fields need not strictly follow the same name (due to possible framework limitations), but the pagination API\nshould follow the specs listed above. The ",(0,r.jsx)(n.code,{children:"page number"}),", ",(0,r.jsx)(n.code,{children:"page size"}),", and ",(0,r.jsx)(n.code,{children:"total_records"})," are typically required\nby the caller in order to understand where the cursor is in relation to the rest of the table. If the API allows\nspecifying the ",(0,r.jsx)(n.code,{children:"sort"})," parameters, ",(0,r.jsx)(n.code,{children:"sort"})," should be returned as well."]}),"\n",(0,r.jsx)(n.p,{children:"Example paginated API call:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",metastring:'title="Example request - page 1, default page size, and default sort"',children:"example.agilopshub.com/user\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",metastring:'title="Example request - page 3, 2 records per page, default sort"',children:"example.agilopshub.com/user?page=3&size=2\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",metastring:'title="Example request - page 3, 2 records per page, sort by username, descending"',children:"example.agilopshub.com/user?&page=3&size=2&sort=username\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-go",metastring:'title="Example request - page 3, 2 records per page, sort by email - descending, then sort by username - ascending"',children:"example.agilopshub.com/user?page=3&size=2&sort=email,desc&sort=username,asc\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",metastring:'title="Example response"',children:'{\n    "data": [\n        {\n            "username": "coolguy",\n            "email": "iamcool@gmail.com"\n        },\n        {\n            "username": "example",\n            "email": "example@gmail.com"\n        },\n    ],\n    "page": {\n        "number": 3,\n        "size": 2,\n        "total_records": 35,\n        "sort": "username,asc"\n    }\n    ...\n}\n'})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",metastring:'title="Example response 2"',children:'{\n    "data": [\n        {\n            "username": "a coolguy",\n            "email": "zzz@gmail.com"\n        },\n    ],\n    "page": {\n        "number": 4,\n        "size": 3,\n        "total_records": 10,\n        "count": 1,\n        "sort": [\n            "username,desc",\n            "email,asc"\n        ]\n    }\n    ...\n}\n'})}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"log-levels",children:"Log levels"}),"\n",(0,r.jsxs)(n.p,{children:["Logging is covered in the ",(0,r.jsx)(n.a,{href:"/docs/docs/contributing/development/logging",children:"Logging & Exception Handling"}),"\nguidelines section."]}),"\n",(0,r.jsxs)(n.p,{children:["As a quick rule of thumb, use ",(0,r.jsx)(n.code,{children:"DEBUG"})," log level to trace inputs (and potentially outputs) to function calls that are\nuseful for debugging the system, and leave these logs there. For ",(0,r.jsx)(n.code,{children:"INFO"})," log level, use it to trace key events in the\nsystem to indicate it is functionally correctly (such as a successful database connection event)."]}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h2,{id:"container-image-tagging",children:"Container Image Tagging"}),"\n",(0,r.jsx)(n.p,{children:"Our standard for tagging built container images follows a version number it is working towards, followed by\nan optional short tag to represent its purpose, followed by a dash and the git commit hash of the source repo:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-swift",metastring:'title="Container Tag Regex"',children:"/v[\\d]+.[\\d]+.[\\d]+(dev|beta|rc)-[\\da-f]{7}/\n"})}),"\n",(0,r.jsx)(n.p,{children:"Example Tag:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"v1.12.0rc-710093d\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The latest release image must also always be tagged with ",(0,r.jsx)(n.code,{children:"latest"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"latest\n"})}),"\n",(0,r.jsxs)(n.p,{children:["The latest development release image must also always be tagged with ",(0,r.jsx)(n.code,{children:"latest-dev"}),"."]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"latest-dev\n"})}),"\n",(0,r.jsx)(n.p,{children:"The images should also follow their repository structure - because we use monorepos and keep source code for each\nrepository together, their tags should include the short name of the module, followed the short name of the module\nagain, and the sub-name for the container in the module. This is required so that GitHub can properly segregate\ndifferent containers linked to the same repository."}),"\n",(0,r.jsxs)(n.p,{children:["Example ",(0,r.jsx)(n.code,{children:"latest-dev"})," tags for the ",(0,r.jsx)(n.code,{children:"IMS"})," module's app and web containers:"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",metastring:'title="Latest Development images for the IMS module"',children:"ghcr.io/mssfoobar/ims/ims-app:latest-dev\nghcr.io/mssfoobar/ims/ims-web:latest-dev\n"})}),"\n",(0,r.jsx)(n.p,{children:"Full example images and their tags:"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",metastring:'title="Latest"',children:"ghcr.io/mssfoobar/unh/unh-app:latest\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",metastring:'title="Latest Development Image"',children:"ghcr.io/mssfoobar/unh/unh-app:latest-dev\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",metastring:'title="Released v3.0.1"',children:"ghcr.io/mssfoobar/unh/unh-app:v3.0.1\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",metastring:'title="Release candidate for v4.0.0"',children:"ghcr.io/mssfoobar/unh/unh-app:v4.0.0rc\n"})}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-jsx",metastring:'title="Developer build for v12.13.14"',children:"ghcr.io/mssfoobar/unh/unh-app:v12.13.14dev-78cdaeb\n"})}),"\n",(0,r.jsxs)(n.p,{children:["Refer to the post on ",(0,r.jsx)(n.a,{href:"/releases/versioning-scheme",children:"versioning scheme"})," for more information on the version numbers."]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(o,{...e})}):o(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>d,x:()=>a});var i=s(96540);const r={},t=i.createContext(r);function d(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:d(e.components),i.createElement(t.Provider,{value:n},e.children)}}}]);